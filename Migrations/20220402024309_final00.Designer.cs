// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetAtlas_The_True_Project.Data;

#nullable disable

namespace NetAtlas_The_True_Project.Migrations
{
    [DbContext(typeof(NetAtlasDbContext))]
    [Migration("20220402024309_final00")]
    partial class final00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Administrateur", b =>
                {
                    b.Property<int>("IdAdministrateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdministrateur"), 1L, 1);

                    b.Property<string>("AdresseMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdministrateur");

                    b.ToTable("Administrateurs");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.AmiMembre", b =>
                {
                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<int>("RequestedToId")
                        .HasColumnType("int");

                    b.Property<int>("FriendRequestFlag")
                        .HasColumnType("int");

                    b.HasKey("RequestedById", "RequestedToId");

                    b.HasIndex("RequestedToId");

                    b.ToTable("Ami", (string)null);
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Internaute", b =>
                {
                    b.Property<int>("IdInternaute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInternaute"), 1L, 1);

                    b.Property<string>("AdresseMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInternaute");

                    b.ToTable("Internautes");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Membre", b =>
                {
                    b.Property<int>("IdMembre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMembre"), 1L, 1);

                    b.Property<string>("AdresseMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Report")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMembre");

                    b.ToTable("Membres");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Moderateur", b =>
                {
                    b.Property<int>("IdModerateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModerateur"), 1L, 1);

                    b.Property<string>("AdresseMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModerateur");

                    b.ToTable("Moderateurs");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Publication", b =>
                {
                    b.Property<int>("IdPublication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublication"), 1L, 1);

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMembre")
                        .HasColumnType("int");

                    b.HasKey("IdPublication");

                    b.HasIndex("IdMembre");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Report", b =>
                {
                    b.Property<int>("IdModerateur")
                        .HasColumnType("int");

                    b.Property<int>("IdMembre")
                        .HasColumnType("int");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.Property<string>("MessageAvertissement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModerateur", "IdMembre");

                    b.HasIndex("IdMembre");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Ressource", b =>
                {
                    b.Property<int>("IdRessource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRessource"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPublication")
                        .HasColumnType("int");

                    b.Property<int>("IsThisReported")
                        .HasColumnType("int");

                    b.HasKey("IdRessource");

                    b.HasIndex("IdPublication");

                    b.ToTable("Ressources");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ressource");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Image_Video", b =>
                {
                    b.HasBaseType("NetAtlas_The_True_Project.Models.Ressource");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Taille")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Image_Video");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Lien", b =>
                {
                    b.HasBaseType("NetAtlas_The_True_Project.Models.Ressource");

                    b.Property<string>("AdresseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Lien");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Message", b =>
                {
                    b.HasBaseType("NetAtlas_The_True_Project.Models.Ressource");

                    b.Property<string>("MessageSend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Message");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.AmiMembre", b =>
                {
                    b.HasOne("NetAtlas_The_True_Project.Models.Membre", "RequestedBy")
                        .WithMany("SentFriendRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NetAtlas_The_True_Project.Models.Membre", "RequestedTo")
                        .WithMany("ReceievedFriendRequests")
                        .HasForeignKey("RequestedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestedBy");

                    b.Navigation("RequestedTo");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Publication", b =>
                {
                    b.HasOne("NetAtlas_The_True_Project.Models.Membre", "membre")
                        .WithMany("Publications")
                        .HasForeignKey("IdMembre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("membre");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Report", b =>
                {
                    b.HasOne("NetAtlas_The_True_Project.Models.Membre", "Membre")
                        .WithMany("Reports")
                        .HasForeignKey("IdMembre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetAtlas_The_True_Project.Models.Moderateur", "Moderateur")
                        .WithMany("Reports")
                        .HasForeignKey("IdModerateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("Moderateur");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Ressource", b =>
                {
                    b.HasOne("NetAtlas_The_True_Project.Models.Publication", "Publication")
                        .WithMany("Ressources")
                        .HasForeignKey("IdPublication")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Membre", b =>
                {
                    b.Navigation("Publications");

                    b.Navigation("ReceievedFriendRequests");

                    b.Navigation("Reports");

                    b.Navigation("SentFriendRequests");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Moderateur", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("NetAtlas_The_True_Project.Models.Publication", b =>
                {
                    b.Navigation("Ressources");
                });
#pragma warning restore 612, 618
        }
    }
}
